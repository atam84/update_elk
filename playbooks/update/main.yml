---

- name: '[o_0] - Upgrade {{ target_hosts }}'
  hosts: "{{ target_hosts }}"
  remote_user: xenos
  become: yes
  gather_facts: no
  serial: 1
  vars_files:
  tasks:
    #
    #
    # Load main.yml variable
    - name: "{{ target_hosts|upper }} - Include defaults global vars"
      include_vars:
        file: "../../vars/main.yml"

    #
    #
    # display file_directory when debug mode is active
    - debug:
        var: file_directory|default('not used')
      when: activate_debug|default(false)|bool == true

    #
    #
    # display files when debug mode is active
    - debug:
        var: files|default('not used')
      when: activate_debug|default(false)|bool == true

    #
    #
    # load all services definition from ../../vars/services/<service_name>.yml in {{ target_hosts }} variable
    - name: "{{ target_hosts|upper }} - Loading all services definition for {{ target_hosts }}"
      include_vars: 
        file: "../../vars/services/{{ target_hosts }}.yml"
        name: "{{ target_hosts }}"

    #
    #
    # copy {{ target_hosts }} into services var more simple to use and more clear to understand
    - set_fact:
        services: "{{ lookup('vars', target_hosts) }}"

    #
    #
    # display the values in services variable
    - name: "Debug {{ target_hosts }}"
      debug:
        var: services
      when: activate_debug|default(false)|bool == true

    #
    #
    # Load the existing services in the server
    - name: "{{ target_hosts|upper }} - Load ansible service facts"
      service_facts:

    #
    #
    # trigger stop_services.yml for each service 
    - name: "{{ target_hosts|upper }} - Stop services"
      include_tasks: stop_services.yml
      loop: "{{ services.stop_services }}"
      loop_control:
        loop_var: service_item


    ###########################################################################################################
    #
    #  here we can add specific tasks or include specific playbook when the services are stopped
    #
    # download the files
    - name: "{{ target_hosts|upper }} - Copy files {{ files[target_hosts] }} needed to /var/tmp directory "
      copy:
        src: "../{{ file_directory }}/{{ item }}"
        dest: "/var/tmp/{{ item }}"
      loop: "{{ files[target_hosts] }}"
    
    # install the rpm with update flag
    - name: "{{ target_hosts|upper }} - install packages for {{ target_hosts }}"
      yum:
        name: "/var/tmp/{{ item }}"
        state: present
      loop: "{{ files[target_hosts] }}"
    #
    #
    #
    ###########################################################################################################


    #
    #
    # Reboot servers if needed
    - block:
        - name: "{{ target_hosts|upper }} - Reboot servers"
          reboot:
            msg: "We reboot that servers."

        - name: "{{ target_hosts|upper }} - waiting the servers to become reachable"
          wait_for_connection:
            connect_timeout: 30
            delay: 5
        
      when: services.reboot_the_server_after_the_upgrade|bool == true

    #
    #
    # Restart services, even when the server is rebooted the services will bi restarted if services.restar_services_after_the_upgrade = true
    - name: "{{ target_hosts|upper }} - Bring services up"
      include_tasks: start_services.yml
      loop: "{{ services.stop_services }}"
      loop_control:
        loop_var: service_item
      when: services.restar_services_after_the_upgrade|bool == true

